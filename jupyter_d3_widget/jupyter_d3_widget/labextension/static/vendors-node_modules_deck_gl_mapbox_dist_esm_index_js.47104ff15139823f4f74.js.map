{"version":3,"file":"vendors-node_modules_deck_gl_mapbox_dist_esm_index_js.47104ff15139823f4f74.js","mappings":"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","sources":["webpack://jupyter_d3_widget/./node_modules/@deck.gl/mapbox/src/deck-utils.ts","webpack://jupyter_d3_widget/./node_modules/@deck.gl/mapbox/src/index.ts","webpack://jupyter_d3_widget/./node_modules/@deck.gl/mapbox/src/mapbox-layer.ts","webpack://jupyter_d3_widget/./node_modules/@deck.gl/mapbox/src/mapbox-overlay.ts","webpack://jupyter_d3_widget/./node_modules/@deck.gl/mapbox/src/resolve-layers.ts"],"sourcesContent":["import {Deck, WebMercatorViewport, MapView, _flatten as flatten} from '@deck.gl/core';\nimport type {DeckProps, MapViewState, Layer} from '@deck.gl/core';\nimport type MapboxLayer from './mapbox-layer';\nimport type {Map} from 'mapbox-gl';\n\nimport {lngLatToWorld, unitsPerMeter} from '@math.gl/web-mercator';\nimport GL from '@luma.gl/constants';\n\ntype UserData = {\n  isExternal: boolean;\n  currentViewport?: WebMercatorViewport | null;\n  mapboxLayers: Set<MapboxLayer<any>>;\n  // mapboxVersion: {minor: number; major: number};\n};\n\n// Mercator constants\nconst TILE_SIZE = 512;\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\n// Create an interleaved deck instance.\nexport function getDeckInstance({\n  map,\n  gl,\n  deck\n}: {\n  map: Map & {__deck?: Deck | null};\n  gl: WebGLRenderingContext;\n  deck?: Deck;\n}): Deck {\n  // Only create one deck instance per context\n  if (map.__deck) {\n    return map.__deck;\n  }\n\n  // Only initialize certain props once per context\n  const customRender = deck?.props._customRender;\n  const onLoad = deck?.props.onLoad;\n\n  const deckProps = getInterleavedProps({\n    ...deck?.props,\n    _customRender: () => {\n      map.triggerRepaint();\n      // customRender may be subscribed by DeckGL React component to update child props\n      // make sure it is still called\n      // Hack - do not pass a redraw reason here to prevent the React component from clearing the context\n      // Rerender will be triggered by MapboxLayer's render()\n      customRender?.('');\n    }\n  });\n\n  let deckInstance: Deck;\n\n  if (!deck || deck.props.gl === gl) {\n    // If deck isn't defined (Internal MapboxLayer use case),\n    // or if deck is defined and is using the WebGLContext created by mapbox (MapboxOverlay and External MapboxLayer use case),\n    // block deck from setting the canvas size, and use the map's viewState to drive deck.\n    // Otherwise, we use deck's viewState to drive the map.\n    Object.assign(deckProps, {\n      gl,\n      width: null,\n      height: null,\n      touchAction: 'unset',\n      viewState: getViewState(map)\n    });\n    if (deck?.isInitialized) {\n      watchMapMove(deck, map);\n    } else {\n      deckProps.onLoad = () => {\n        onLoad?.();\n        watchMapMove(deckInstance, map);\n      };\n    }\n  }\n\n  if (deck) {\n    deckInstance = deck;\n    deck.setProps(deckProps);\n    (deck.userData as UserData).isExternal = true;\n  } else {\n    deckInstance = new Deck(deckProps);\n    map.on('remove', () => {\n      deckInstance.finalize();\n      map.__deck = null;\n    });\n  }\n\n  (deckInstance.userData as UserData).mapboxLayers = new Set();\n  // (deckInstance.userData as UserData).mapboxVersion = getMapboxVersion(map);\n  map.__deck = deckInstance;\n  map.on('render', () => {\n    if (deckInstance.isInitialized) afterRender(deckInstance, map);\n  });\n\n  return deckInstance;\n}\n\nfunction watchMapMove(deck: Deck, map: Map & {__deck?: Deck | null}) {\n  const _handleMapMove = () => {\n    if (deck.isInitialized) {\n      // call view state methods\n      onMapMove(deck, map);\n    } else {\n      // deregister itself when deck is finalized\n      map.off('move', _handleMapMove);\n    }\n  };\n  map.on('move', _handleMapMove);\n}\n\nexport function getInterleavedProps(currProps: DeckProps) {\n  const nextProps: DeckProps = {\n    ...currProps,\n    // TODO: import these defaults from a single source of truth\n    parameters: {\n      depthMask: true,\n      depthTest: true,\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthFunc: GL.LEQUAL,\n      blendEquation: GL.FUNC_ADD,\n      ...currProps.parameters\n    },\n    views: currProps.views || [new MapView({id: 'mapbox'})]\n  };\n\n  return nextProps;\n}\n\nexport function addLayer(deck: Deck, layer: MapboxLayer<any>): void {\n  (deck.userData as UserData).mapboxLayers.add(layer);\n  updateLayers(deck);\n}\n\nexport function removeLayer(deck: Deck, layer: MapboxLayer<any>): void {\n  (deck.userData as UserData).mapboxLayers.delete(layer);\n  updateLayers(deck);\n}\n\nexport function updateLayer(deck: Deck, layer: MapboxLayer<any>): void {\n  updateLayers(deck);\n}\n\nexport function drawLayer(deck: Deck, map: Map, layer: MapboxLayer<any>): void {\n  let {currentViewport} = deck.userData as UserData;\n  let clearStack: boolean = false;\n  if (!currentViewport) {\n    // This is the first layer drawn in this render cycle.\n    // Generate viewport from the current map state.\n    currentViewport = getViewport(deck, map, true);\n    (deck.userData as UserData).currentViewport = currentViewport;\n    clearStack = true;\n  }\n\n  if (!deck.isInitialized) {\n    return;\n  }\n\n  deck._drawLayers('mapbox-repaint', {\n    viewports: [currentViewport],\n    layerFilter: ({layer: deckLayer}) => layer.id === deckLayer.id,\n    clearStack,\n    clearCanvas: false\n  });\n}\n\nexport function getViewState(map: Map): MapViewState & {\n  repeat: boolean;\n  padding: {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n  };\n} {\n  const {lng, lat} = map.getCenter();\n\n  const viewState: MapViewState & {\n    repeat: boolean;\n    padding: {\n      left: number;\n      right: number;\n      top: number;\n      bottom: number;\n    };\n  } = {\n    // Longitude returned by getCenter can be outside of [-180, 180] when zooming near the anti meridian\n    // https://github.com/visgl/deck.gl/issues/6894\n    longitude: ((lng + 540) % 360) - 180,\n    latitude: lat,\n    zoom: map.getZoom(),\n    bearing: map.getBearing(),\n    pitch: map.getPitch(),\n    padding: map.getPadding(),\n    repeat: map.getRenderWorldCopies()\n  };\n\n  if (map.getTerrain?.()) {\n    // When the base map has terrain, we need to target the camera at the terrain surface\n    centerCameraOnTerrain(map, viewState);\n  }\n\n  return viewState;\n}\n\nfunction centerCameraOnTerrain(map: Map, viewState: MapViewState) {\n  if (map.getFreeCameraOptions) {\n    // mapbox-gl v2\n    const {position} = map.getFreeCameraOptions();\n    if (!position || position.z === undefined) {\n      return;\n    }\n\n    // @ts-ignore transform is not typed\n    const height = map.transform.height;\n    const {longitude, latitude, pitch} = viewState;\n\n    // Convert mapbox mercator coordinate to deck common space\n    const cameraX = position.x * TILE_SIZE;\n    const cameraY = (1 - position.y) * TILE_SIZE;\n    const cameraZ = position.z * TILE_SIZE;\n\n    // Mapbox manipulates zoom in terrain mode, see discussion here: https://github.com/mapbox/mapbox-gl-js/issues/12040\n    const center = lngLatToWorld([longitude, latitude]);\n    const dx = cameraX - center[0];\n    const dy = cameraY - center[1];\n    const cameraToCenterDistanceGround = Math.sqrt(dx * dx + dy * dy);\n\n    const pitchRadians = pitch! * DEGREES_TO_RADIANS;\n    const altitudePixels = 1.5 * height;\n    const scale =\n      pitchRadians < 0.001\n        ? // Pitch angle too small to deduce the look at point, assume elevation is 0\n          (altitudePixels * Math.cos(pitchRadians)) / cameraZ\n        : (altitudePixels * Math.sin(pitchRadians)) / cameraToCenterDistanceGround;\n    viewState.zoom = Math.log2(scale);\n\n    const cameraZFromSurface = (altitudePixels * Math.cos(pitchRadians)) / scale;\n    const surfaceElevation = cameraZ - cameraZFromSurface;\n    viewState.position = [0, 0, surfaceElevation / unitsPerMeter(latitude)];\n  }\n  // @ts-ignore transform is not typed\n  else if (typeof map.transform.elevation === 'number') {\n    // maplibre-gl\n    // @ts-ignore transform is not typed\n    viewState.position = [0, 0, map.transform.elevation];\n  }\n}\n\n// function getMapboxVersion(map: Map): {minor: number; major: number} {\n//   // parse mapbox version string\n//   let major = 0;\n//   let minor = 0;\n//   // @ts-ignore (2339) undefined property\n//   const version: string = map.version;\n//   if (version) {\n//     [major, minor] = version.split('.').slice(0, 2).map(Number);\n//   }\n//   return {major, minor};\n// }\n\nfunction getViewport(deck: Deck, map: Map, useMapboxProjection = true): WebMercatorViewport {\n  return new WebMercatorViewport({\n    id: 'mapbox',\n    x: 0,\n    y: 0,\n    width: deck.width,\n    height: deck.height,\n    ...getViewState(map),\n    nearZMultiplier: useMapboxProjection\n      ? // match mapbox-gl@>=1.3.0's projection matrix\n        0.02\n      : // use deck.gl's own default\n        0.1\n  });\n}\n\nfunction afterRender(deck: Deck, map: Map): void {\n  const {mapboxLayers, isExternal} = deck.userData as UserData;\n\n  if (isExternal) {\n    // Draw non-Mapbox layers\n    const mapboxLayerIds = Array.from(mapboxLayers, layer => layer.id);\n    const deckLayers = flatten(deck.props.layers, Boolean) as Layer[];\n    const hasNonMapboxLayers = deckLayers.some(\n      layer => layer && !mapboxLayerIds.includes(layer.id)\n    );\n    let viewports = deck.getViewports();\n    const mapboxViewportIdx = viewports.findIndex(vp => vp.id === 'mapbox');\n    const hasNonMapboxViews = viewports.length > 1 || mapboxViewportIdx < 0;\n\n    if (hasNonMapboxLayers || hasNonMapboxViews) {\n      if (mapboxViewportIdx >= 0) {\n        viewports = viewports.slice();\n        viewports[mapboxViewportIdx] = getViewport(deck, map, false);\n      }\n\n      deck._drawLayers('mapbox-repaint', {\n        viewports,\n        layerFilter: params =>\n          (!deck.props.layerFilter || deck.props.layerFilter(params)) &&\n          (params.viewport.id !== 'mapbox' || !mapboxLayerIds.includes(params.layer.id)),\n        clearCanvas: false\n      });\n    }\n  }\n\n  // End of render cycle, clear generated viewport\n  (deck.userData as UserData).currentViewport = null;\n}\n\nfunction onMapMove(deck: Deck, map: Map): void {\n  deck.setProps({\n    viewState: getViewState(map)\n  });\n  // Camera changed, will trigger a map repaint right after this\n  // Clear any change flag triggered by setting viewState so that deck does not request\n  // a second repaint\n  deck.needsRedraw({clearRedrawFlags: true});\n}\n\nfunction updateLayers(deck: Deck): void {\n  if ((deck.userData as UserData).isExternal) {\n    return;\n  }\n\n  const layers: Layer[] = [];\n  (deck.userData as UserData).mapboxLayers.forEach(deckLayer => {\n    const LayerType = deckLayer.props.type;\n    const layer = new LayerType(deckLayer.props);\n    layers.push(layer);\n  });\n  deck.setProps({layers});\n}\n","export {default as MapboxLayer} from './mapbox-layer';\nexport {default as MapboxOverlay} from './mapbox-overlay';\n\nexport type {MapboxOverlayProps} from './mapbox-overlay';\n","import {getDeckInstance, addLayer, removeLayer, updateLayer, drawLayer} from './deck-utils';\nimport type {Map, CustomLayerInterface} from 'mapbox-gl';\nimport type {Deck, Layer} from '@deck.gl/core';\n\nexport type MapboxLayerProps<LayerT extends Layer> = Partial<LayerT['props']> & {\n  id: string;\n  renderingMode?: '2d' | '3d';\n  deck?: Deck;\n};\n\nexport default class MapboxLayer<LayerT extends Layer> implements CustomLayerInterface {\n  id: string;\n  type: 'custom';\n  renderingMode: '2d' | '3d';\n  map: Map | null;\n  deck: Deck | null;\n  props: MapboxLayerProps<LayerT>;\n\n  /* eslint-disable no-this-before-super */\n  constructor(props: MapboxLayerProps<LayerT>) {\n    if (!props.id) {\n      throw new Error('Layer must have an unique id');\n    }\n\n    this.id = props.id;\n    this.type = 'custom';\n    this.renderingMode = props.renderingMode || '3d';\n    this.map = null;\n    this.deck = null;\n    this.props = props;\n  }\n\n  /* Mapbox custom layer methods */\n\n  onAdd(map: Map, gl: WebGLRenderingContext): void {\n    this.map = map;\n    this.deck = getDeckInstance({map, gl, deck: this.props.deck});\n    addLayer(this.deck, this);\n  }\n\n  onRemove(): void {\n    if (this.deck) {\n      removeLayer(this.deck, this);\n    }\n  }\n\n  setProps(props: MapboxLayerProps<LayerT>) {\n    // id cannot be changed\n    Object.assign(this.props, props, {id: this.id});\n    // safe guard in case setProps is called before onAdd\n    if (this.deck) {\n      updateLayer(this.deck, this);\n    }\n  }\n\n  render() {\n    drawLayer(this.deck!, this.map!, this);\n  }\n}\n","import {Deck, assert} from '@deck.gl/core';\nimport {getViewState, getDeckInstance, getInterleavedProps} from './deck-utils';\n\nimport type {Map, IControl, MapMouseEvent} from 'mapbox-gl';\nimport type {MjolnirGestureEvent, MjolnirPointerEvent} from 'mjolnir.js';\nimport type {DeckProps} from '@deck.gl/core';\n\nimport {resolveLayers} from './resolve-layers';\n\nexport type MapboxOverlayProps = Omit<\n  DeckProps,\n  | 'width'\n  | 'height'\n  | 'gl'\n  | 'parent'\n  | 'canvas'\n  | '_customRender'\n  | 'viewState'\n  | 'initialViewState'\n  | 'controller'\n> & {\n  interleaved?: boolean;\n};\n\n/**\n * Implements Mapbox [IControl](https://docs.mapbox.com/mapbox-gl-js/api/markers/#icontrol) interface\n * Renders deck.gl layers over the base map and automatically synchronizes with the map's camera\n */\nexport default class MapboxOverlay implements IControl {\n  private _props: MapboxOverlayProps;\n  private _deck?: Deck;\n  private _map?: Map;\n  private _container?: HTMLDivElement;\n  private _interleaved: boolean;\n  private _lastMouseDownPoint?: {x: number; y: number; clientX: number; clientY: number};\n\n  constructor(props: MapboxOverlayProps) {\n    const {interleaved = false, ...otherProps} = props;\n    this._interleaved = interleaved;\n    this._props = otherProps;\n  }\n\n  /** Update (partial) props of the underlying Deck instance. */\n  setProps(props: MapboxOverlayProps): void {\n    if (this._interleaved && props.layers) {\n      resolveLayers(this._map, this._deck, this._props.layers, props.layers);\n    }\n\n    Object.assign(this._props, props);\n\n    if (this._deck) {\n      this._deck.setProps(this._interleaved ? getInterleavedProps(this._props) : this._props);\n    }\n  }\n\n  /** Called when the control is added to a map */\n  onAdd(map: Map): HTMLDivElement {\n    this._map = map;\n    return this._interleaved ? this._onAddInterleaved(map) : this._onAddOverlaid(map);\n  }\n\n  private _onAddOverlaid(map: Map): HTMLDivElement {\n    /* global document */\n    const container = document.createElement('div');\n    Object.assign(container.style, {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      pointerEvents: 'none'\n    });\n    this._container = container;\n\n    this._deck = new Deck({\n      ...this._props,\n      parent: container,\n      viewState: getViewState(map)\n    });\n\n    map.on('resize', this._updateContainerSize);\n    map.on('render', this._updateViewState);\n    map.on('mousedown', this._handleMouseEvent);\n    map.on('dragstart', this._handleMouseEvent);\n    map.on('drag', this._handleMouseEvent);\n    map.on('dragend', this._handleMouseEvent);\n    map.on('mousemove', this._handleMouseEvent);\n    map.on('mouseout', this._handleMouseEvent);\n    map.on('click', this._handleMouseEvent);\n    map.on('dblclick', this._handleMouseEvent);\n\n    this._updateContainerSize();\n    return container;\n  }\n\n  private _onAddInterleaved(map: Map): HTMLDivElement {\n    this._deck = getDeckInstance({\n      map,\n      // @ts-ignore non-public map property\n      gl: map.painter.context.gl,\n      deck: new Deck({\n        ...this._props,\n        // @ts-ignore non-public map property\n        gl: map.painter.context.gl\n      })\n    });\n\n    map.on('styledata', this._handleStyleChange);\n    resolveLayers(map, this._deck, [], this._props.layers);\n\n    return document.createElement('div');\n  }\n\n  /** Called when the control is removed from a map */\n  onRemove(): void {\n    const map = this._map;\n\n    if (map) {\n      if (this._interleaved) {\n        this._onRemoveInterleaved(map);\n      } else {\n        this._onRemoveOverlaid(map);\n      }\n    }\n\n    this._deck?.finalize();\n    this._deck = undefined;\n    this._map = undefined;\n    this._container = undefined;\n  }\n\n  private _onRemoveOverlaid(map: Map): void {\n    map.off('resize', this._updateContainerSize);\n    map.off('render', this._updateViewState);\n    map.off('mousedown', this._handleMouseEvent);\n    map.off('dragstart', this._handleMouseEvent);\n    map.off('drag', this._handleMouseEvent);\n    map.off('dragend', this._handleMouseEvent);\n    map.off('mousemove', this._handleMouseEvent);\n    map.off('mouseout', this._handleMouseEvent);\n    map.off('click', this._handleMouseEvent);\n    map.off('dblclick', this._handleMouseEvent);\n  }\n\n  private _onRemoveInterleaved(map: Map): void {\n    map.off('styledata', this._handleStyleChange);\n    resolveLayers(map, this._deck, this._props.layers, []);\n  }\n\n  getDefaultPosition() {\n    return 'top-left';\n  }\n\n  /** Forwards the Deck.pickObject method */\n  pickObject(params: Parameters<Deck['pickObject']>[0]): ReturnType<Deck['pickObject']> {\n    assert(this._deck);\n    return this._deck.pickObject(params);\n  }\n\n  /** Forwards the Deck.pickMultipleObjects method */\n  pickMultipleObjects(\n    params: Parameters<Deck['pickMultipleObjects']>[0]\n  ): ReturnType<Deck['pickMultipleObjects']> {\n    assert(this._deck);\n    return this._deck.pickMultipleObjects(params);\n  }\n\n  /** Forwards the Deck.pickObjects method */\n  pickObjects(params: Parameters<Deck['pickObjects']>[0]): ReturnType<Deck['pickObjects']> {\n    assert(this._deck);\n    return this._deck.pickObjects(params);\n  }\n\n  /** Remove from map and releases all resources */\n  finalize() {\n    if (this._map) {\n      this._map.removeControl(this);\n    }\n  }\n\n  private _handleStyleChange = () => {\n    resolveLayers(this._map, this._deck, this._props.layers, this._props.layers);\n  };\n\n  private _updateContainerSize = () => {\n    if (this._map && this._container) {\n      const {clientWidth, clientHeight} = this._map.getContainer();\n      Object.assign(this._container.style, {\n        width: `${clientWidth}px`,\n        height: `${clientHeight}px`\n      });\n    }\n  };\n\n  private _updateViewState = () => {\n    const deck = this._deck;\n    if (deck) {\n      // @ts-ignore (2345) map is always defined if deck is\n      deck.setProps({viewState: getViewState(this._map)});\n      // Redraw immediately if view state has changed\n      if (deck.isInitialized) {\n        deck.redraw();\n      }\n    }\n  };\n\n  private _handleMouseEvent = (event: MapMouseEvent) => {\n    const deck = this._deck;\n    if (!deck || !deck.isInitialized) {\n      return;\n    }\n\n    const mockEvent: {\n      type: string;\n      deltaX?: number;\n      deltaY?: number;\n      offsetCenter: {x: number; y: number};\n      srcEvent: MapMouseEvent;\n      tapCount?: number;\n    } = {\n      type: event.type,\n      offsetCenter: event.point,\n      srcEvent: event\n    };\n\n    const lastDown = this._lastMouseDownPoint;\n    if (!event.point && lastDown) {\n      // drag* events do not contain a `point` field\n      mockEvent.deltaX = event.originalEvent.clientX - lastDown.clientX;\n      mockEvent.deltaY = event.originalEvent.clientY - lastDown.clientY;\n      mockEvent.offsetCenter = {\n        x: lastDown.x + mockEvent.deltaX,\n        y: lastDown.y + mockEvent.deltaY\n      };\n    }\n\n    switch (mockEvent.type) {\n      case 'mousedown':\n        deck._onPointerDown(mockEvent as MjolnirGestureEvent);\n        this._lastMouseDownPoint = {\n          ...event.point,\n          clientX: event.originalEvent.clientX,\n          clientY: event.originalEvent.clientY\n        };\n        break;\n\n      case 'dragstart':\n        mockEvent.type = 'panstart';\n        deck._onEvent(mockEvent as MjolnirGestureEvent);\n        break;\n\n      case 'drag':\n        mockEvent.type = 'panmove';\n        deck._onEvent(mockEvent as MjolnirGestureEvent);\n        break;\n\n      case 'dragend':\n        mockEvent.type = 'panend';\n        deck._onEvent(mockEvent as MjolnirGestureEvent);\n        break;\n\n      case 'click':\n        mockEvent.tapCount = 1;\n        deck._onEvent(mockEvent as MjolnirGestureEvent);\n        break;\n\n      case 'dblclick':\n        mockEvent.type = 'click';\n        mockEvent.tapCount = 2;\n        deck._onEvent(mockEvent as MjolnirGestureEvent);\n        break;\n\n      case 'mousemove':\n        mockEvent.type = 'pointermove';\n        deck._onPointerMove(mockEvent as MjolnirPointerEvent);\n        break;\n\n      case 'mouseout':\n        mockEvent.type = 'pointerleave';\n        deck._onPointerMove(mockEvent as MjolnirPointerEvent);\n        break;\n\n      default:\n        return;\n    }\n  };\n}\n","import {_flatten as flatten} from '@deck.gl/core';\nimport MapboxLayer from './mapbox-layer';\n\nimport type {Deck, LayersList, Layer} from '@deck.gl/core';\nimport type {Map} from 'mapbox-gl';\n\nconst UNDEFINED_BEFORE_ID = '__UNDEFINED__';\n\n/** Insert Deck layers into the mapbox Map according to the user-defined order */\n// eslint-disable-next-line complexity, max-statements\nexport function resolveLayers(\n  map?: Map,\n  deck?: Deck,\n  oldLayers?: LayersList,\n  newLayers?: LayersList\n) {\n  // Wait until map style is loaded\n  // @ts-ignore non-public map property\n  if (!map || !deck || !map.style || !map.style._loaded) {\n    return;\n  }\n\n  const layers = flatten(newLayers, Boolean) as Layer[];\n\n  if (oldLayers !== newLayers) {\n    // Step 1: remove layers that no longer exist\n    const prevLayers = flatten(oldLayers, Boolean) as Layer[];\n    const prevLayerIds = new Set<string>(prevLayers.map(l => l.id));\n\n    for (const layer of layers) {\n      prevLayerIds.delete(layer.id);\n    }\n\n    for (const id of prevLayerIds) {\n      if (map.getLayer(id)) {\n        map.removeLayer(id);\n      }\n    }\n  }\n\n  // Step 2: add missing layers\n  for (const layer of layers) {\n    const mapboxLayer = map.getLayer(layer.id) as MapboxLayer<Layer>;\n    if (mapboxLayer) {\n      // @ts-expect-error not typed\n      mapboxLayer.implementation.setProps(layer.props);\n    } else {\n      map.addLayer(\n        new MapboxLayer({id: layer.id, deck}),\n        // @ts-expect-error beforeId is not defined in LayerProps\n        layer.props.beforeId\n      );\n    }\n  }\n\n  // Step 3: check the order of layers\n  // If beforeId is defined, the deck layer should always render before the mapbox layer [beforeId]\n  // If beforeId is not defined, the deck layer should appear after all mapbox layers\n  // When two deck layers share the same beforeId, they are rendered in the order that is passed into Deck props.layers\n  // @ts-ignore non-public map property\n  const mapLayers: string[] = map.style._order;\n\n  // Group deck layers by beforeId\n  const layerGroups: Record<string, string[]> = {};\n  for (const layer of layers) {\n    // @ts-expect-error beforeId is not defined in LayerProps\n    let {beforeId} = layer.props;\n    if (!beforeId || !mapLayers.includes(beforeId)) {\n      beforeId = UNDEFINED_BEFORE_ID;\n    }\n    layerGroups[beforeId] = layerGroups[beforeId] || [];\n    layerGroups[beforeId].push(layer.id);\n  }\n\n  for (const beforeId in layerGroups) {\n    const layerGroup = layerGroups[beforeId];\n    let lastLayerIndex =\n      beforeId === UNDEFINED_BEFORE_ID ? mapLayers.length : mapLayers.indexOf(beforeId);\n    let lastLayerId = beforeId === UNDEFINED_BEFORE_ID ? undefined : beforeId;\n    for (let i = layerGroup.length - 1; i >= 0; i--) {\n      const layerId = layerGroup[i];\n      const layerIndex = mapLayers.indexOf(layerId);\n      if (layerIndex !== lastLayerIndex - 1) {\n        map.moveLayer(layerId, lastLayerId);\n        if (layerIndex > lastLayerIndex) {\n          // The last layer's index have changed\n          lastLayerIndex++;\n        }\n      }\n      lastLayerIndex--;\n      lastLayerId = layerId;\n    }\n  }\n}\n"],"names":["Deck","WebMercatorViewport","MapView","_flatten","flatten","lngLatToWorld","unitsPerMeter","TILE_SIZE","DEGREES_TO_RADIANS","Math","PI","getDeckInstance","map","gl","deck","__deck","customRender","props","_customRender","onLoad","deckProps","getInterleavedProps","triggerRepaint","deckInstance","Object","assign","width","height","touchAction","viewState","getViewState","isInitialized","watchMapMove","setProps","userData","isExternal","on","finalize","mapboxLayers","Set","afterRender","_handleMapMove","onMapMove","off","currProps","nextProps","parameters","depthMask","depthTest","blend","blendFunc","polygonOffsetFill","depthFunc","blendEquation","views","id","addLayer","layer","add","updateLayers","removeLayer","delete","updateLayer","drawLayer","currentViewport","clearStack","getViewport","_drawLayers","viewports","layerFilter","deckLayer","clearCanvas","lng","lat","getCenter","longitude","latitude","zoom","getZoom","bearing","getBearing","pitch","getPitch","padding","getPadding","repeat","getRenderWorldCopies","getTerrain","centerCameraOnTerrain","getFreeCameraOptions","position","z","undefined","transform","cameraX","x","cameraY","y","cameraZ","center","dx","dy","cameraToCenterDistanceGround","sqrt","pitchRadians","altitudePixels","scale","cos","sin","log2","cameraZFromSurface","surfaceElevation","elevation","useMapboxProjection","nearZMultiplier","mapboxLayerIds","Array","from","deckLayers","layers","Boolean","hasNonMapboxLayers","some","includes","getViewports","mapboxViewportIdx","findIndex","vp","hasNonMapboxViews","length","slice","params","viewport","needsRedraw","clearRedrawFlags","forEach","LayerType","type","push","default","MapboxLayer","MapboxOverlay","constructor","Error","renderingMode","onAdd","onRemove","render","assert","resolveLayers","_map","_deck","_props","_container","clientWidth","clientHeight","getContainer","style","redraw","event","mockEvent","offsetCenter","point","srcEvent","lastDown","_lastMouseDownPoint","deltaX","originalEvent","clientX","deltaY","clientY","_onPointerDown","_onEvent","tapCount","_onPointerMove","interleaved","otherProps","_interleaved","_onAddInterleaved","_onAddOverlaid","container","document","createElement","left","top","pointerEvents","parent","_updateContainerSize","_updateViewState","_handleMouseEvent","painter","context","_handleStyleChange","_onRemoveInterleaved","_onRemoveOverlaid","getDefaultPosition","pickObject","pickMultipleObjects","pickObjects","removeControl","UNDEFINED_BEFORE_ID","oldLayers","newLayers","_loaded","prevLayers","prevLayerIds","l","getLayer","mapboxLayer","implementation","beforeId","mapLayers","_order","layerGroups","layerGroup","lastLayerIndex","indexOf","lastLayerId","i","layerId","layerIndex","moveLayer"],"sourceRoot":""}